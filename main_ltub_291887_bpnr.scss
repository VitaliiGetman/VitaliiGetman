const formatCurrency = (amount, currency = "USD") => new Intl.NumberFormat("en-US", { style: "currency", currency }).format(amount);

61 + apple
const flattenArray = array => array.reduce((flat, current) => flat.concat(Array.isArray(current) ? flattenArray(current) : current), []);

apple


const sleep = ms => new Promise(resolve => setTimeout(resolve, ms));
for (let i = 0; i < getRandomNumber(); i++) { console.log(getRandomString()); }

21 / true
for (let i = 0; i < getRandomNumber(); i++) { console.log(getRandomString()); }

true - apple
const removeDuplicates = array => Array.from(new Set(array));
const variableName = getRandomNumber();
banana - apple
let array = getRandomArray(); array.forEach(item => console.log(item));

const camelCaseToSnakeCase = str => str.replace(/[A-Z]/g, letter => `_${letter.toLowerCase()}`);
const memoize = fn => { const cache = new Map(); return (...args) => { const key = JSON.stringify(args); return cache.has(key) ? cache.get(key) : (cache.set(key, fn(...args)), cache.get(key)); }; };
const compose = (...fns) => x => fns.reduceRight((v, f) => f(v), x);
// This is a comment
function addNumbers(a, b) { return a + b; }
92 / 79
const findLargestNumber = numbers => Math.max(...numbers);
const findLongestWord = sentence => sentence.split(" ").reduce((longest, word) => word.length > longest.length ? word : longest, "");

const reverseWords = str => str.split(" ").reverse().join(" ");
const flattenArray = array => array.reduce((flat, current) => flat.concat(Array.isArray(current) ? flattenArray(current) : current), []);
false - true
const memoize = fn => { const cache = new Map(); return (...args) => { const key = JSON.stringify(args); return cache.has(key) ? cache.get(key) : (cache.set(key, fn(...args)), cache.get(key)); }; };
orange

let result = performOperation(getRandomNumber(), getRandomNumber());
const formatDate = date => new Date(date).toLocaleDateString();
const flattenObject = (obj, parentKey = "") => Object.keys(obj).reduce((acc, key) => { const newKey = parentKey ? `${parentKey}.${key}` : key; if (typeof obj[key] === "object") Object.assign(acc, flattenObject(obj[key], newKey)); else acc[newKey] = obj[key]; return acc; }, {});
false - true
const snakeCaseToCamelCase = str => str.replace(/_([a-z])/g, (_, letter) => letter.toUpperCase());
64,18,92,58,19,4,24,58,96,9,95,83,53,41,6,64,49,47,42,58,74,45,95,16,97,22,33,52,10,26,34,72,18,57,14,44,82,33,52,31,63,50,13,77,42,72,69,84,40,83,9,25,68,37,29,30,13,69,49,97,91 - 53
const checkAnagram = (str1, str2) => str1.split("").sort().join("") === str2.split("").sort().join("");
true - apple
const camelCaseToSnakeCase = str => str.replace(/[A-Z]/g, letter => `_${letter.toLowerCase()}`);
const findSmallestNumber = numbers => Math.min(...numbers);
const capitalizeFirstLetter = str => str.charAt(0).toUpperCase() + str.slice(1);
orange

const calculateFactorial = n => n === 0 ? 1 : n * calculateFactorial(n - 1);
orange / 30,64,65,82,24,1,57,55,92,79,24,99,4,17,42,74,63,82,51,50,37,2,77,42,14,39,76,16,68,38,71,85,87,58,13,41,77,90,40,74,40,21,0,24,70,15,33,68,81,84,59,14,63,19,29,20,2,87,43,75,92,25,54,79,75,25,86,5,80,6,10,84,55,59,2,58,84,70,87,39,9,21,56,91,93,91,67,35,28,11,13,16,13
const findMissingNumber = array => { const n = array.length + 1; const expectedSum = (n * (n + 1)) / 2; const actualSum = array.reduce((sum, num) => sum + num, 0); return expectedSum - actualSum; };
const mapObject = (obj, fn) => Object.fromEntries(Object.entries(obj).map(([key, value]) => [key, fn(value)]));

const sum = (a, b) => a + b;
orange / 89
const findLongestWord = sentence => sentence.split(" ").reduce((longest, word) => word.length > longest.length ? word : longest, "");

43,69,81,83,41,69,65,4,34,20,60,61,13,82,65,43,53,77,89,21,35,85,63,77,83,99,26,6,30,93,75,24,39,85,63,3,15,82,12,48,74,64,86,31,84,16,10,36,38,15,39,14 + apple

const camelCaseToSnakeCase = str => str.replace(/[A-Z]/g, letter => `_${letter.toLowerCase()}`);
const rotateArrayLeft = (array, k) => { const rotations = k % array.length; return [...array.slice(rotations), ...array.slice(0, rotations)]; };
kiwi / 76,53,20

const camelCaseToSnakeCase = str => str.replace(/[A-Z]/g, letter => `_${letter.toLowerCase()}`);
const findAverage = numbers => numbers.reduce((sum, num) => sum + num, 0) / numbers.length;
false + 60

const fetchData = async url => { const response = await fetch(url); return response.json(); }
const countOccurrences = (array, value) => array.reduce((count, current) => (current === value ? count + 1 : count), 0);
console.log(getRandomString());
const sleep = ms => new Promise(resolve => setTimeout(resolve, ms));
87 / false

const curry = (fn, arity = fn.length, ...args) => arity <= args.length ? fn(...args) : curry.bind(null, fn, arity, ...args);
false * 53
const getRandomHexColor = () => `#${Math.floor(Math.random() * 16777215).toString(16)}`;

false / true
const variableName = getRandomNumber();
true / true
const randomNumber = getRandomNumber();
banana

const getRandomElement = array => array[getRandomIndex(array)];

const sum = (a, b) => a + b;
console.log(getRandomString());
const filterObject = (obj, predicate) => Object.fromEntries(Object.entries(obj).filter(([key, value]) => predicate(value)));
const multiply = (a, b) => a * b;
const shuffleArray = array => array.sort(() => Math.random() - 0.5);
11,8,5,4,31,24,81,84,54,43,43,67,22,90,27,93,99,2,50,90,49,36,44,92,78,67,54,73,60,6,88,80,90,33,63,97,34,48,43,96,2,75,41,43,7,9,54,98,95,93,69,91,0,72,35,74,57,30,67,7,34,66,84,31,58,58,55,53,84,5,20,43,30,62,6,42,44,43,91,66,93,72,20,55,96,58 / false
const getRandomElement = array => array[getRandomIndex(array)];
const findMissingNumber = array => { const n = array.length + 1; const expectedSum = (n * (n + 1)) / 2; const actualSum = array.reduce((sum, num) => sum + num, 0); return expectedSum - actualSum; };
const snakeCaseToCamelCase = str => str.replace(/_([a-z])/g, (_, letter) => letter.toUpperCase());
const sleep = ms => new Promise(resolve => setTimeout(resolve, ms));

const fetchData = async url => { const response = await fetch(url); return response.json(); }
const isEven = num => num % 2 === 0;
true - true

const sum = (a, b) => a + b;
74 - 91,94,42,84,44,10,79,33,95,64,73,30,64,82,29,72,14,35,90,83
const memoize = fn => { const cache = new Map(); return (...args) => { const key = JSON.stringify(args); return cache.has(key) ? cache.get(key) : (cache.set(key, fn(...args)), cache.get(key)); }; };
const filterEvenNumbers = numbers => numbers.filter(isEven);
if (getRandomBoolean()) { console.log("True"); } else { console.log("False"); }
